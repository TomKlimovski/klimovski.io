{"version":3,"sources":["styles/_themes.js","styles/_globalStyles.js","styles/_typographies.js","components/TitleBar.js","components/Clock.js","helpers/utils.js","helpers/commands/parser.js","components/CommandBox.js","components/output/TxtOutput.js","components/output/LsOutput.js","components/output/ImageOutput.js","components/output/RegularOutput.js","helpers/commands/execs.js","content/home.js","helpers/commands/actions.js","components/Prompt.js","App.js","index.js"],"names":["darkMode","colors","backgroundColor","white","fireOpal","ruby","papayaWhip","opal","globalCss","props","css","regularTextStyle","regularLightTextStyle","smallRegularLightTextStyle","TitleBarDiv","styled","div","theme","ButtonsDiv","TitleDiv","LinksDiv","CloseButton","button","TitleBar","onClick","window","close","href","icon","faGithub","faTwitter","faLinkedin","faEnvelope","ClockDiv","Clock","useState","Date","date","setDate","useEffect","id","setInterval","clearInterval","toLocaleDateString","day","weekday","month","toLocaleTimeString","keys","genUuid","v4","fileType","parseCommand","cmd","parts","toLowerCase","trim","replace","split","command","args","length","slice","startsWith","dotSlashArgs","unshift","CommandInput","input","CommandBox","setCmd","disabled","setDisabled","commandValue","setCommandValue","autoFocus","spellCheck","onChange","e","target","value","onKeyDown","which","keyCode","TxtOutputContainer","TxtOutput","lines","map","line","index","LsOutputContainer","longOption","LsItemDiv","itemType","PermsInfoDiv","LsOutput","files","file","type","longView","name","ImageDiv","ImageOutput","src","alt","RegularOutputContainer","RegularOutput","output","execs","text","join","execContent","content","run","needsArg","noSuchFile","actions","l","dir","Object","values","UserHostDiv","DirDiv","ShellPromptDiv","NotFoundDiv","PromptDiv","PromptsContainer","Prompt","user","setClear","setUser","setDir","setRenderNext","setOutput","action","Prompts","renderNext","clear","p","key","prompts","setPrompts","concat","prompt","App","styles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39668582.chunk.js","sourcesContent":["export const darkMode = {\n    colors: {\n        backgroundColor: '#3a3335',\n        white: '#ffffff',\n        fireOpal: '#eb5e55',\n        ruby: '#d81e5b',\n        papayaWhip: '#fdf0d5',\n        opal: '#c6d8d3',\n    }\n}","import { css } from '@emotion/react';\n\nexport const globalCss = (props) => css`\n    html, body {\n        margin: 0px;\n        background-color: ${props.colors.backgroundColor};\n    }\n\n    * {\n        box-sizing: border-box;\n    }\n\n    a {\n        color: inherit;\n        text-decoration: none;\n    }\n\n    a:hover {\n        text-decoration: underline; \n    }\n\n`;","import { css } from '@emotion/react';\n\nexport const regularTextStyle = css`\n    font-family: RobotoMono;\n    font-size: 20px;\n`;\n\nexport const regularLightTextStyle = css`\n    font-family: RobotoMono;\n    font-weight: lighter;\n    font-size: 20px;\n`;\n\nexport const smallRegularLightTextStyle = css`\n    font-family: RobotoMono;\n    font-weight: lighter;\n    font-szie: 12px;\n`;","import styled from '@emotion/styled';\nimport { regularTextStyle} from '../styles/_typographies'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin, faTwitter } from '@fortawesome/free-brands-svg-icons' \nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons' \n\nconst TitleBarDiv = styled.div`\n    height: 32px; \n    display: flex;\n    align-items: center;\n    padding: 0px;\n    background-color: ${(props) => props.theme.colors.papayaWhip};\n    justify-content: center;\n`;\n\nconst ButtonsDiv = styled.div`\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: left;\n    padding: 10px;\n`;\n\nconst TitleDiv = styled.div`\n    ${regularTextStyle};\n`;\n\nconst LinksDiv = styled.div`\n    flex: 1;\n    display: flex;\n    font-size: 20px;\n    padding-top: 5px;\n    padding-right: 10px;\n    gap: 10px;\n    justify-content: flex-end;\n    a:hover {\n        text-decoration: none;\n        transform: scale(1.1);\n    }\n`;\n\nconst CloseButton = styled.button`\n    border-radius: 50%;\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 20px;\n    width: 20px;\n    background-color: ${(props) => props.theme.colors.ruby};\n    color: ${(props) => props.theme.colors.ruby};\n    &:hover {\n        color: ${(props) => props.theme.colors.white};\n        cursor: pointer;\n    }\n`;\n\nfunction TitleBar() {\n    const closeWindow = () => {\n        window.close();\n    }\n\n    return (\n        <TitleBarDiv>\n            <ButtonsDiv>\n                <CloseButton onClick={closeWindow}>X</CloseButton>\n            </ButtonsDiv>\n            <TitleDiv>\n                <a href='https://github.com/TomKlimovski/klimovski.io'>klimovski.io</a>\n            </TitleDiv>\n            <LinksDiv>\n                <a href=\"ttps://github.com/TomKlimovski\">\n                    <FontAwesomeIcon icon={faGithub}/>\n                </a>\n                <a href=\"https://twitter.com/tommoFitz\">\n                    <FontAwesomeIcon icon={faTwitter}/>\n                </a>\n                <a href=\"https://www.linkedin.com/in/tomklimovski/\">\n                    <FontAwesomeIcon icon={faLinkedin}/>\n                </a>\n                <a href=\"mailto:tom.klimovski@gammadata.io\">\n                    <FontAwesomeIcon icon={faEnvelope}/>\n                </a>\n            </LinksDiv>\n        </TitleBarDiv>\n    );\n}\n\nexport default TitleBar;\n","import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\n\nimport { smallRegularLightTextStyle } from '../styles/_typographies';\n\nconst ClockDiv = styled.div`\n    display: flex;\n    height: 28px;\n    width: 100%;\n    padding-left: 10px;\n    justify-content: left;\n    align-items: center;\n    color: ${(props) => props.theme.colors.white};\n    ${smallRegularLightTextStyle}\n`;\n\nfunction Clock(){\n    const [date, setDate] = useState(new Date());\n\n    const tick = () => {\n        setDate(new Date());\n    }\n\n    useEffect(() => {\n        var id = setInterval(() => tick(), 1000);\n\n        return function cleanup() {\n            clearInterval(id);\n        };\n    });\n\n    return (\n        <ClockDiv>\n            <p> {date.toLocaleDateString('en-US',{\n                day: 'numeric',\n                weekday: 'short',\n                month: 'short',\n            }) + ' ' + date.toLocaleTimeString()\n            } </p>\n        </ClockDiv>\n    );\n}\n\nexport default Clock;\n","import { v4 } from 'uuid';\n\nexport const keys = {\n    KEY_RETURN : 13,\n    KEY_UP : 38, \n    KEY_DOWN: 40,\n    KEY_ESC: 27\n};\n\nexport const genUuid = v4;\n\nexport const fileType = {\n    regular: 0, \n    exec: 1,\n    dir: 2,\n}","const parseCommand = (cmd) => {\n    const parts = cmd.toLowerCase().trim().replace(/ +/g, ' ').split(' '); \n    let command = parts[0];\n    let args = [];\n\n    if (parts.length > 1){\n        args = parts.slice(1, parts.length);\n    }\n\n    if (command.startsWith(\"./\")){\n        command = \"sh\";\n        const dotSlashArgs = parts[0].slice(2)\n        if (dotSlashArgs.length > 1){\n            args.unshift(dotSlashArgs)\n        }\n        return {\n            command: command,\n            args: args,\n        }\n    } \n\n    return {\n        command: command, \n        args: args,\n    }\n};\n\nexport default parseCommand;","import styled from '@emotion/styled';\nimport { useState } from 'react';\n\nimport { regularTextStyle } from '../styles/_typographies';\nimport { keys } from '../helpers/utils';\nimport parseCommand from '../helpers/commands/parser';\n\nconst CommandInput = styled.input`\n    flex: 1;\n    border: none;\n    display: flex;\n    align-items: center;\n    caret-color: ${(props) => props.theme.colors.opal};\n    background-color: ${(props) => props.theme.colors.backgroundColor};\n    color: ${(props)=> props.theme.colors.white};\n    &:focus {\n        outline: none;\n    }\n    ${regularTextStyle};\n`;\n\nfunction CommandBox({setCmd}) {\n    const [disabled, setDisabled] = useState(false); \n    const [commandValue, setCommandValue] = useState('');\n\n    const onChange = e => {\n        setCommandValue(e.target.value);\n    };\n\n    const onKeyDown = e => {\n        const key = e.which || e.keyCode;\n        if (key === keys.KEY_RETURN) {\n            setCmd(parseCommand(commandValue));\n            setDisabled(true);\n        } \n    };\n\n    return (\n        <CommandInput \n            autoFocus \n            spellCheck={false}\n            disabled={disabled} \n            onChange={onChange} \n            onKeyDown={onKeyDown}\n        />\n    )\n}\n\nexport default CommandBox;","import styled from '@emotion/styled';\n\nimport { regularLightTextStyle } from '../../styles/_typographies';\n\nconst TxtOutputContainer = styled.div`\n    color: ${(props) => props.theme.colors.white};\n    width: 100%;\n    padding-left: 10px;\n    justify-content: left;\n    display: flex;\n    flex-direction: column;\n    ${regularLightTextStyle};\n`;\n\nexport default function TxtOutput({lines}){\n    return (\n        <TxtOutputContainer>\n            {lines.map((line, index) => {\n                return <div key={index}>{line}</div>\n            })}\n        </TxtOutputContainer>\n    );\n}\n","import styled from '@emotion/styled';\n\nimport { regularLightTextStyle, regularTextStyle } from '../../styles/_typographies';\nimport { fileType } from '../../helpers/utils';\n\nconst LsOutputContainer = styled.div`\n    width: 100%;\n    padding-left: 10px;\n    justify-content: left;\n    display: flex;\n    flex-direction: ${({longOption}) => {\n        return longOption ? 'column': 'row';\n    }};\n    gap: ${({longOption}) => {\n        return longOption ? '5px': '30px';\n    }};\n    ${regularTextStyle};\n`;\n\nconst LsItemDiv = styled.div`\n    color: ${({itemType, ...props}) => {\n        if (itemType === fileType.dir) {\n            return props.theme.colors.papayaWhip;\n        } else if(itemType === fileType.exec) {\n            return props.theme.colors.fireOpal;\n        }\n        return props.theme.colors.white;\n    }};\n    display: flex;\n    flex-direction: row;\n    gap: 30px;\n    ${regularTextStyle};\n`;\n\nconst PermsInfoDiv = styled.div`\n    color: ${(props) => props.theme.colors.opal};\n    ${regularLightTextStyle};\n`;\n\nexport default function LsOutput({files, longOption}){\n    return (\n        <LsOutputContainer longOption={longOption}>\n            {longOption ? <LsItemDiv> total {files.length} </LsItemDiv> : null}\n            {files.map((file, index) => {\n                return (\n                    <div key={index}>\n                        <LsItemDiv itemType={file.type}>\n                            {longOption ? <PermsInfoDiv>{file.longView}</PermsInfoDiv> : null}\n                            {file.name}\n                        </LsItemDiv>\n                    </div>\n                )\n            })}\n        </LsOutputContainer>\n    ) \n}","import styled from '@emotion/styled';\n\nconst ImageDiv = styled.div`\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n`;\n\nexport default function ImageOutput({src, alt}){\n    return (\n        <ImageDiv>\n            <img src={src} alt={alt}/>\n        </ImageDiv>\n    );\n}","import styled from '@emotion/styled';\n\nimport { regularLightTextStyle } from '../../styles/_typographies';\n\nconst RegularOutputContainer = styled.div`\n    color: ${(props) => props.theme.colors.white};\n    display: flex;\n    padding-left: 10px;\n    align-items: center;\n    ${regularLightTextStyle};\n`;\n\nexport default function RegularOutput({output}){\n    return (\n        <RegularOutputContainer>\n            {output}\n        </RegularOutputContainer>\n    )\n}","import ImageOutput from '../../components/output/ImageOutput';\nimport TxtOutput from '../../components/output/TxtOutput';\nimport RegularOutput from '../../components/output/RegularOutput';\nimport Cowsay from 'react-cowsay';\n\nconst rickRoll = () => {\n    return <ImageOutput src={process.env.PUBLIC_URL + '/rickroll.gif'} alt='rick-roll'/>\n}\n\nconst cowsay = (args) => {\n    if (args.length < 2) {\n        return <TxtOutput lines={[`'cowsay' needs an argument. Try 'cowsay \"hello\".'`]}/>\n    }\n    return (\n        <RegularOutput output={\n                <Cowsay text={args.slice(1).join(' ')}/>\n            }\n        />\n    )\n}\n\nconst execs = {\n    'rick-roll': rickRoll,\n    'cowsay': cowsay,\n}\n\nexport default execs;","import { fileType } from \"../helpers/utils\";\nimport execs from \"../helpers/commands/execs\";\n\nconst execContent = \"Error: can not print an executable file.\";\n\nexport const files = {\n    \"about.txt\": {\n        name: \"about.txt\",\n        content: [\n            \"Hello, I am Tom. I currently work as a GCP Coding Architect at Gamma Data (https://gammadata.io).\",\n            \"-----\",\n            \"Cloud advocate. Reach out to me about building teams and delivering GCP/Azure type software project. Everything as Code \",\n            \"I'm always looking to learn something new. I like a good API and an even better IPA\",\n            \"------\", \n            \"This site has been lovingly ripped from (https://github.com/aavshr/aava.sh).\"\n        ],\n        type: fileType.regular,\n        longView: 'r--',\n    },\n    \"cowsay\": {\n        name: \"cowsay\",\n        content: [execContent],\n        type: fileType.exec,\n        run: execs['cowsay'],\n        longView: 'r-x',\n    },\n    \"do-not-run-me\": {\n        name: \"do-not-run-me\",\n        content: [execContent],\n        type: fileType.exec,\n        run: execs['rick-roll'],\n        longView: 'r-x',\n    },\n}","import TxtOutput from '../../components/output/TxtOutput';\nimport LsOutput from '../../components/output/LsOutput';\nimport { files } from '../../content/home.js'\nimport { fileType } from '../utils';\n\nconst needsArg = (cmd) => {\n   return <TxtOutput lines={[`'${cmd}' needs an argument.`]}/>;\n}\n\nconst noSuchFile = (file) => {\n    return <TxtOutput lines={[`No such file: '${file}'.`]}/>;\n}\n\nconst ls = (args) => {\n    // TODO: have proper parsing\n    // hideous right now\n    const l = args.length;\n    let longOption = false;\n    if (l > 0){\n        let dir = \".\";\n        if (args[0] === \"-l\" || args[0] === \"-al\"){\n            longOption = true;\n            if (l > 3){\n                return <TxtOutput lines={[`'ls' takes a single argument.`]}/> \n            }\n            if (l === 2){\n                dir = args[1];\n            }\n        } else {\n            if (l > 1){\n                return <TxtOutput lines={[`'ls' takes a single argument.`]}/> \n            }\n            dir = args[0];\n        }\n        if (dir !== \".\"){\n            if (files[dir]){\n                return <LsOutput longOption={longOption} files={[files[dir]]}/>;\n            }\n            return <TxtOutput lines={[`No such file or directory: '${dir}'`]}/>\n        } \n    }\n    return <LsOutput longOption={longOption} files={Object.values(files)}/>;\n}\n\nconst cat = (args) => {\n    if (!args || args.length === 0) {\n        return needsArg(\"cat\")\n    } \n    const file = args[0];\n    if (files[file]){\n        return <TxtOutput lines={files[file].content}/>;\n    }\n    return noSuchFile(file);\n}\n\nconst sh = (args) => {\n    if (!args || args.length === 0) {\n        return needsArg(\"sh\")\n    }\n    const file = args[0];\n    if (!files[file]){\n        return noSuchFile(file);\n    }\n    if (files[file].type !== fileType.exec){\n        return <TxtOutput lines={[`'${file}' is not an executable file.`]}/>\n    }\n    return files[file].run(args);\n}\n\nconst help = (args) => {\n    return <TxtOutput lines = {[\n            \"ls [-l]: list directory contents\",\n            \"cat: print files\",\n            \"clear: clear output\",\n            \"sh: run an executable file\",\n        ]}\n    />\n}\n\nconst actions = {\n    'ls': ls,\n    'cat': cat,\n    'help': help,\n    'sh': sh,\n}\n\nexport default actions;","import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\n\nimport { regularLightTextStyle, regularTextStyle } from '../styles/_typographies';\nimport CommandBox from './CommandBox';\nimport actions from '../helpers/commands/actions';\nimport { genUuid } from '../helpers/utils'\n\nconst UserHostDiv = styled.div`\n    color: ${(props) => props.theme.colors.ruby};\n`;\n\nconst DirDiv = styled.div`\n    color: ${(props) => props.theme.colors.papayaWhip};\n`;\n\nconst ShellPromptDiv = styled.div`\n    color: ${(props) => props.theme.colors.white};\n`;\n\nconst NotFoundDiv = styled.div`\n    padding-left: 10px;\n    color: ${(props) => props.theme.colors.white};\n    ${regularLightTextStyle};\n`;\n\nconst PromptDiv = styled.div`\n    display: flex;\n    height: 32px;  \n    align-items: center;\n    justify-content: left;\n    padding-left: 10px;\n    gap: 10px;\n    ${regularTextStyle};\n`;\n\nconst PromptsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n`;\n\nfunction Prompt({user, dir, setUser, setDir, setClear, setRenderNext}){\n    const [cmd, setCmd] = useState({});\n    const [output, setOutput] = useState();\n\n    useEffect(() => {\n        if (cmd.command){\n            // clear command\n            if (cmd.command === 'clear'){\n                setClear(true);\n                setRenderNext(true);\n                return;\n            }\n            if (actions[cmd.command]){\n                const action = actions[cmd.command];\n                setOutput(action(cmd.args));\n            } else {\n                const o = () => (\n                    <NotFoundDiv>\n                        Command not found : '{cmd.command}'. Type 'help' for available commands.\n                    </NotFoundDiv>\n                )\n                setOutput(o);\n            }\n            setRenderNext(true);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cmd]);\n\n    return (\n        <>\n        <PromptDiv>\n            <UserHostDiv>{user}@internet</UserHostDiv>\n            <DirDiv>{dir}</DirDiv>\n            <ShellPromptDiv>%</ShellPromptDiv>\n            <CommandBox setCmd={setCmd}/>\n        </PromptDiv>\n        <div>\n            {output}\n        </div>\n        </>\n    );\n}\n\nfunction Prompts(){\n    const [renderNext, setRenderNext] = useState(false);\n    const [clear, setClear] = useState(false);\n    const [user, setUser] = useState('guest');\n    const [dir, setDir] = useState('~');\n    \n    const p = {\n        key: genUuid(),\n        user: user,\n        dir: dir,\n    }\n    const [prompts, setPrompts] = useState([p]);\n\n    useEffect(()=> {\n        if (renderNext){\n            setRenderNext(false)\n            if (clear){\n                setClear(false);\n                // hacky\n                setPrompts([{\n                    key: genUuid(),\n                    user: user,\n                    dir: dir,\n                }]);\n                return;\n            }\n            setPrompts(prompts.concat(p));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [renderNext])\n\n    return (\n        <PromptsContainer>\n            {prompts.map((prompt)=> {\n                return <Prompt \n                    key={prompt.key} \n                    user={prompt.user} \n                    dir={prompt.dir}\n                    setUser={setUser}\n                    setDir={setDir}\n                    setClear = {setClear}\n                    setRenderNext={setRenderNext}\n                />\n            })}\n        </PromptsContainer>\n    )\n}\n\nexport default Prompts;","import { ThemeProvider, Global} from '@emotion/react';\nimport { darkMode } from './styles/_themes';\nimport { globalCss } from './styles/_globalStyles';\nimport './styles/globals.css';\n\nimport TitleBar from './components/TitleBar';\nimport Clock from './components/Clock';\nimport Prompts from './components/Prompt';\n\nfunction App() {\n  return (\n     <ThemeProvider theme={darkMode}>\n        <Global styles={globalCss}/>\n        <TitleBar/>\n        <Clock/>\n        <Prompts/>\n    </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}